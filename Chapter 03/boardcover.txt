// H * W 크기의 게임판 --> 전역 변수화 xx 각 상태마다 판이 달라야 하므로 안됨
// H * W 크기의 게임판은 매개변수로 보낸다
// 기본적으로 검은 칸과 흰 칸으로 구성되어 있음
// 이 중 모든 흰 칸을 세 칸짜리 L자 모양의 블록으로 덮고 싶음 --> 기저 사례로
// 이 블록은 회전은 가능하지만 서로 겹치거나 검은 칸을 덮거나, 게임판 밖으로 나가면 안됨 --> 기저 사례로 갈 듯
// L자가 덮을 수 있는 방법의 수를 구하라 --> 즉 모든 방법을 시도해봐라 ( 완전 탐색 기법 )

// 입력 첫 줄에는 테스트 케이스의 수 C(C<= 30)
// 테스트 케이스의 첫 줄에는 두개의 정수 H,W (1<=H, W<=20)
// 다음 H 줄에 각 W 글자로 게임판의 모양
// #은 검은 칸, .은 흰칸
// 흰칸의 갯수는 50을 넘지 않는다

// L자 모양은 3개의 칸이 필요하므로 3의 배수가 아니면 성립이 되지 않음 --> 기저 사례


// 재귀함수를 사용하기 위해서는 작은 단위로 쪼개는 작업이 필요하다
// 여기서는 3으로 나눠 한 조각에서 한 블록을 내려 놓도록 하자


// L자가 가능한 모션의 수는 4가지 --> 여기서 쪼개 져야하는 작업
// 이 블럭이 놓일 수 있는가에 대한 확인을 해야한다.
// 만약에 놓을 수 있으면 true로 설정한다.
// 모든 블럭을 돌았을 경우 count를 해서 성공 실패를 알림

// 모든 칸에 블럭을 채웠을 경우 return --> 기저사례
// 블럭은 왼쪽 위 부터 검사함
// 모든 칸에 블럭을 채우는 경우를 뭐라고 해야할까?
// 그냥 덮어 씌우는 거 고려 안하고 일단 모든 경우의 수의 블럭을 채워 본다음
// 다 덮여 있으면 카운트 하고 아니면 카운트 하지 않는 아이디어...


